import telebot
import re
import spreadsheet
from telebot import types
from enum import Enum


class Modes(Enum):
    MOVE = 'move'
    CANCEL = 'cancel'
    NONE = 'none'


token = '5692398615:AAFeVNfA4UZGbTE0-hJY9rexq2AI2DCF2Y4'
bot = telebot.TeleBot(token)
time_pattern = re.compile('^\d{0,2}:\d{2} –º—Å–∫$')
entry_pattern = re.compile('^[–ê-—è]{5,11} \d{0,2}:\d{2} –º—Å–∫$')
cur_weekday = None
mode = Modes.NONE


def weekdays_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
               , types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
               , types.KeyboardButton("–°—Ä–µ–¥–∞")
               , types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
               , types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
               , types.KeyboardButton("–°—É–±–±–æ—Ç–∞"))
    return markup

def create_entry(message):
    markup = weekdays_markup()
    markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ üëá", reply_markup=markup)
    print(message.chat.id)

@bot.message_handler(commands=['start'])
def start_message(message, hello_message=True):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ'))
    markup.add(types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏–π'))
    markup.add(types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–ø–∏—Å–∏'))
    if hello_message:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç‚úå\n–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å üëá", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def message_reply(message):
    user_info = '@' + message.from_user.username \
        if message.from_user.username is not None \
        else (message.contact if message.contact is not None else message.from_user.full_name)

    if message.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ':
        create_entry(message)

    elif message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏–π':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å'))
        markup.add(types.KeyboardButton('–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å'))
        markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å üëá', reply_markup=markup)

    elif message.text == '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å':
        global mode
        mode = Modes.CANCEL
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        try:
            for entry in spreadsheet.get_entries_by_user(user_info)[0]:
                markup.add((types.KeyboardButton(entry[0] + ' ' + entry[1])))
            markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))
        except spreadsheet.ZeroEntries as exc:
            bot.send_message(message.chat.id, str(exc))
            start_message(message, hello_message=False)
        else:
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø–∏—Å—å –¥–ª—è –æ—Ç–º–µ–Ω—ã üëá', reply_markup=markup)

    elif message.text == '–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ –∑–∞–ø–∏—Å—å':
        mode = Modes.MOVE
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        try:
            for entry in spreadsheet.get_entries_by_user(user_info)[0]:
                markup.add((types.KeyboardButton(entry[0] + ' ' + entry[1])))
            markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))
        except spreadsheet.ZeroEntries as exc:
            bot.send_message(message.chat.id, str(exc))
            start_message(message, hello_message=False)
        else:
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø–∏—Å—å –¥–ª—è –æ—Ç–º–µ–Ω—ã üëá', reply_markup=markup)

    elif message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–ø–∏—Å–∏':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for entry in spreadsheet.get_entries_by_user(user_info)[0]:
            bot.send_message(message.chat.id, entry[0] + ' ' + entry[1])
        start_message(message, hello_message=False)

    elif message.text in ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        global cur_weekday
        cur_weekday = message.text
        try:
            for time in spreadsheet.get_free_time(message.text):
                markup.add(types.KeyboardButton(time))
            markup.add(types.KeyboardButton('–û—Ç–º–µ–Ω–∞'))
        except spreadsheet.ZeroEntries as exc:
            bot.send_message(message.chat.id, str(exc))
            start_message(message, hello_message=False)
        else:
            bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è üëá', reply_markup=markup)

    elif time_pattern.match(message.text):
        if cur_weekday is None:
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
                             reply_markup=weekdays_markup())
            start_message(message, hello_message=False)
        try:
            spreadsheet.update_user_schedule(user_info, cur_weekday, message.text)

        except spreadsheet.OccupiedEntry as exc:
            bot.send_message(message.chat.id, str(exc))
            start_message(message, hello_message=False)
        else:
            bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
            print(user_info)
            bot.send_message(997567679, user_info + ' –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ ' + message.text + ' –≤ ' + cur_weekday)
            cur_weekday = None
            start_message(message, hello_message=False)
    elif entry_pattern.match(message.text):
        if mode is Modes.CANCEL:
            day, time = tuple(message.text.split(' ', 1))
            spreadsheet.update_user_schedule(user_info, day, time, delete=True)
            bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!')
            bot.send_message(997567679, user_info + ' —É–¥–∞–ª–∏–ª –∑–∞–ø–∏—Å—å –≤ ' + day + ' ' + time)
            start_message(message, hello_message=False)
        elif mode is Modes.MOVE:
            day, time = tuple(message.text.split(' ', 1))
            spreadsheet.update_user_schedule(user_info, day, time, delete=True)
            create_entry(message)
    elif message.text == '–û—Ç–º–µ–Ω–∞':
        start_message(message, hello_message=False)



print('bot started')
bot.infinity_polling()
