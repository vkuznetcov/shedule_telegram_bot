import telebot
import re
import spreadsheet
from telebot import types

token = '5692398615:AAFeVNfA4UZGbTE0-hJY9rexq2AI2DCF2Y4'
bot = telebot.TeleBot(token)
time_pattern = re.compile('^\d{0,2}:\d{2} –º—Å–∫$')
cur_weekday = None


def weekdays_markup():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
               , types.KeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫")
               , types.KeyboardButton("–°—Ä–µ–¥–∞")
               , types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥")
               , types.KeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞")
               , types.KeyboardButton("–°—É–±–±–æ—Ç–∞"))
    return markup


@bot.message_handler(commands=['start'])
def start_message(message, hello_message=True):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ'))
    # markup.add(types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –∑–∞–Ω—è—Ç–∏–π'))
    if hello_message:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç‚úå\n–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!")
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å üëá", reply_markup=markup)



@bot.message_handler(content_types=['text'])
def message_reply(message):
    if message.text == '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ':
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å üëá", reply_markup=weekdays_markup())
        print(message.chat.id)
    if message.text in ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        global cur_weekday
        cur_weekday = message.text
        for time in spreadsheet.get_free_time(message.text):
            markup.add(types.KeyboardButton(time))
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è üëá', reply_markup=markup)
    elif time_pattern.match(message.text):
        if cur_weekday is None:
            bot.send_message(message.chat.id, '–ü–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏',
                             reply_markup=weekdays_markup())
            return
        user_info = '@' + message.from_user.username \
            if message.from_user.username is not None \
            else (message.contact if message.contact is not None else message.from_user.full_name)
        spreadsheet.update_user_schedule(user_info
                                         , cur_weekday
                                         , message.text)
        bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!')
        print(user_info)
        bot.send_message(997567679, user_info + ' –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ ' + message.text + ' –≤ ' + cur_weekday)
        cur_weekday = None
        start_message(message, hello_message=False)


print('bot started')
bot.infinity_polling()
