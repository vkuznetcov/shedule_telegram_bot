import gspread
import numpy as np

import spreadsheet_consts
from spreadsheet_consts import parse_value, parse_days_index, parse_time_index


class ZeroEntries(Exception):
    pass

class OccupiedEntry(Exception):
    pass


gc = gspread.service_account(filename='pythonbotspreadsheets-4c85514af834.json')
spreadsheet = 'https://docs.google.com/spreadsheets/d/1N2fw5LiybpWO8TnL6zg12d2Sp9i5b3wmK2GP4KMbJCw/edit?usp=sharing'

sh = gc.open_by_url(spreadsheet)
worksheet = sh.get_worksheet(0)


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π(–∑–∞–Ω—è—Ç—ã—Ö/–Ω–µ–∑–∞–Ω—è—Ç—ã—Ö) –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è
def get_schedule_by_day(weekday: str):
    return worksheet.get_all_values()[parse_value(weekday)][1:]


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_entries_by_user(user: str):
    all_values = np.asarray(worksheet.get_all_values())
    entries = np.where(all_values == user)
    # return [[parse_days_index(entries[0][i]), parse_time_index(entries[1][i] - 1)] for i in range(len(entries[0]))]
    indices = [[entries[0][i], entries[1][i]] for i in range(len(entries[0]))]
    strs = [[parse_days_index(entry[0]), parse_time_index(entry[1] - 1)] for entry in indices]
    if len(indices) == 0:
        raise ZeroEntries("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π!")
    return strs, indices


# –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä–∞ –Ω–µ–∑–∞–Ω—è—Ç—ã—Ö –≤—Ä–µ–º–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ, –≤ —Å–ø–∏—Å–∫–µ –≤ –∫–æ–¥–µ —ç—Ç–∏ –Ω–æ–º–µ—Ä–∞ –±—É–¥—É—Ç –Ω–∞ 1 –º–µ–Ω—å—à–µ
def get_free_time(weekday: str):
    weekday_times = get_schedule_by_day(weekday)
    available = []
    for time_index in range(len(weekday_times)):
        if weekday_times[time_index] == '':
            available.append(spreadsheet_consts.parse_time_index(time_index))
    if len(available) == 0:
        raise ZeroEntries('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π üòî')
    return available


# –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —è—á–µ–π–∫—É —Å–æ —Å–≤–æ–±–æ–¥–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
def update_user_schedule(user_info: str, weekday: str, time: str, delete=False):
    if delete:
        cell_list = worksheet.range('A1:Z50')
        cell_list[(parse_value(weekday) + 1) * 17 + parse_value(time) + 2].value = ''
        worksheet.update_cells(cell_list)
    else:
        value = worksheet.cell(parse_value(weekday) + 1, parse_value(time) + 2).value
        if worksheet.cell(parse_value(weekday) + 1, parse_value(time) + 2).value is not None:
            raise OccupiedEntry('–û—à–∏–±–∫–∞! –ö—Ç–æ-—Ç–æ –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–∞ —ç—Ç–æ –≤—Ä–µ–º—è –±—ã—Å—Ç—Ä–µ–µ –≤–∞—Å üòî')
        worksheet.update_cell(parse_value(weekday) + 1
                              , parse_value(time) + 2
                              , user_info)

# if __name__ == '__main__':
#     print(get_entries_by_user('@jpuew'))
